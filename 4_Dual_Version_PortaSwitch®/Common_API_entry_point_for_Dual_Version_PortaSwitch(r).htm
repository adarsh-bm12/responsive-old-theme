<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "..";
    gCommonRootRelPath = "..";
    gTopicId = "5.5";
  
//]]></script>

  <script type="text/javascript" src="../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../template/Port/topicheader.css"/>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <title>Common API entry point for Dual Version PortaSwitch® </title>
  <meta name="topic-status" content="Draft"/>

  <meta charset="UTF-8"/>
  <title>Common API entry point for Dual Version PortaSwitch® </title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../assets/css/new_css.css"/>
  <link rel="stylesheet" href="../assets/css/PortaSwitch_Concepts_MR89-01-AD.css"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Common API entry point for Dual Version PortaSwitch® ">
        <span>Common API entry point for Dual Version PortaSwitch® </span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <h2 class="Heading2"><a id="Common_API_entry_point_for_Dual_Version_PortaSwitch"></a>Common API entry point for Dual Version PortaSwitch®</h2>
  <p>Dual Version PortaSwitch® is a solution that enables service providers to perform smooth and controlled customer migration. It also provides extensible API for integration with third-party applications, CRM systems, building self-care portals, etc.
    Users must be able to log in to the same portal, under the same address regardless of their current location within Dual Version PortaSwitch® in order to preserve their customary habits.</p>
  <p>Thus, John Doe will log in to <a class="Hyperlink" href="http://www.mybilling.com/" target="_blank">www.mybilling.com</a> to check his balance and invoices, both when his record is on the source system and after it is moved to the target. Administrators
    and resellers, in turn, must be able to operate in both systems, via the API, without reconfiguring their applications.</p>
  <p>Please note that administrators/resellers can log into their customer/account self-care interface. If that customer/account is already moved to the target system, PortaBilling® denies automatic login. This is to protect against fraud, since this login
    request comes from outside the network. To access the customer/account self-care interface, administrators/resellers must click <strong>Login </strong>again.</p>
  <p>To this end, WebDispatcher for Dual Version PortaSwitch® serves as a single API entry point for both the source and the target systems. It accepts API requests from applications (e.g. CRM) and dispatches them across systems for processing.</p>
  <p>WebDispatcher is one of the components of the DSBC and operates on the same servers where the DSBC is deployed. Like other DSBC components, WebDispatcher is clustered, runs on several servers and is accessible via a single public IP address.</p>
  <p><a id="_Hlk522709900"></a>That is how WebDispatcher works. The application sends an API request to get customer information. WebDispatcher finds which system a customer is located in and sends a request there. After WebDispatcher receives the results,
    it returns that customer information to the application.</p>
  <p> </p>
  <p><img alt="WebDispatcher as DSBC component" src="../assets/images/PortaSwitch_Concepts_MR89-01-AD_files/image39.png" data-rhwidget="Basic" data-popupimage="../assets/images/PortaSwitch_Concepts_MR89-01-AD_files/image39.png" class="popup-image-thumbnail" width="750"/></p>
  <p> </p>
  <p>Thus, an application can receive data from the source, the target or even both systems. The decision about which data to retrieve is based on the following:</p>
  <ul>
    <li>
      <p class="ListParagraph">Who uses the application – the administrator/reseller or a retail customer/account, and</p>
    </li>
    <li>
      <p class="ListParagraph">The user’s location – if it is within the source or the target system.</p>
    </li>
  </ul>
  <p>Let’s consider how retail customers and administrators/resellers operate in Dual Version PortaSwitch® via the API, separately.</p>
  <h4 class="Heading4"><a id="API_for_retail_customers/accounts"></a>API for retail customers/accounts</h4>
  <p>Customers and accounts can only operate with a system where their records are located. Thus, when a customer logs on to the external self-care portal, the application sends the API request to WebDispatcher. It checks the customer’s location within Dual
    Version PortaSwitch® and if the customer was moved to the target system, WebDispatcher sends the API request to that system.</p>
  <p>Then, when the customer performs an action (e.g. selects xDRs for the previous billing period), WebDispatcher proxies the API request to the respective system (e.g. the target system). The target system then retrieves the xDRs and WebDispatcher delivers
    them to the application.</p>
  <p>If a customer in the source system uses the external self-care portal, WebDispatcher receives the API requests and sends them to the source system for processing.</p>
  <h4 class="Heading4"><a id="API_for_administrators_and_resellers"></a>API for administrators and resellers</h4>
  <p>Administrators, resellers and their staff (representatives, customer care staff, etc.) manage their own configurations plus those of customers who exist in both systems within Dual Version PortaSwitch®. Therefore, depending upon customer location, their
    applications must be able to send the proper context, i.e. which system will process their requests.</p>
  <p>WebDispatcher automatically detects the context based on the i_customer/i_account values passed in the input parameters within API requests. For this purpose, customer and account records in Dual Version PortaSwitch® have unique IDs. When you move customer
    data from one system to another, IDs are preserved. Later on, customers created on the source system receive odd ID values while customers created on the target system receive even ID values. This prevents data collision during customer migration
    from one system to another.</p>
  <p>Some API applications use both the IDs of customers/accounts and the IDs of entities such as products, volume discount plans, etc. as static values in API requests. For example, to obtain information about a customer’s volume discount plan usage, the
    application sends <span class="FixedWidth">i_customer </span>and<span class="FixedWidth"> i_vd_plan </span>values in the input parameters.</p>
  <p>To preserve the workflow for these applications in Dual Version PortaSwitch®, IDs for all configuration entities are preserved when moved between systems. Thus, your ABC product has the same ID (e.g. i_product=123) on both systems. As a result, fewer
    customizations are required to make the API application compatible with Dual Version PortaSwitch®.</p>
  <p>Differently from customers and accounts, these entities remain available in the source system, even when moved to the target one. Therefore, the administrator must remember to modify them in both systems in order to prevent differences in configuration.</p>
  <p>Once an administrator has configured the interconnection between systems, the workflow is typically the following:</p>
  <ul>
    <li>
      <p class="ListParagraph">The application connects to WebDispatcher via the API and receives the session ID.</p>
    </li>
    <li>
      <p class="ListParagraph">If the application sends the API request to retrieve the customer list, WebDispatcher runs the request in both systems and then merges the results into a single list. Thus, the administrator or reseller sees those customers who are still within
        the source system, those who were moved to the target system and those who were created in the target system.</p>
    </li>
    <li>
      <p class="ListParagraph">To manage a customer in Dual Version PortaSwitch®, the application sends the ID of this customer’s record in an API request. WebDispatcher sends the request to the system, where this customer is provisioned. After the results are received, the data
        is delivered to the application.</p>
    </li>
    <li>
      <p class="ListParagraph">Entities such as products, bundle promotions, volume discount plans, etc. can exist independently, i.e. not be tied to a particular customer directly. Therefore, to retrieve the list of subscriptions from the target system, the application sets
        the session context by providing the unique ID for the target system’s billing environment within the API request. Then WebDispatcher runs further requests in the target system.</p>
    </li>
    <li>
      <p class="ListParagraph">To operate with subscriptions from the source system, the application switches the session context by providing the ID of the billing environment in the source system. In this case, all subsequent requests are processed by the source system.</p>
    </li>
    <li>
      <p class="ListParagraph">To modify a customer class with the same ID in both systems in Dual Version PortaSwitch® the application must first set the session context to the source system and update the customer class there. Then the application switches the session context
        to the target system and updates the customer class there. We recommend this approach to avoid creating differences in entity configuration.</p>
    </li>
  </ul>
  <p>CPE profile provisioning is supported for Dual Version PortaSwitch®. So when an IP phone connects to the Internet and requests a configuration file from WebDispatcher, WebDispatcher processes the request and retrieves the file from the target system
    and then delivers it to the IP phone.</p>
  <p>The obsolete TFTP protocol is no longer supported, therefore the HTTP protocol is supported for CPE profile provisioning in Dual Version PortaSwitch®.</p>
  <p>WebDispatcher for Dual Version PortaSwitch® provides a single place for customer management and system operation. This makes the migration process more fluid. The full application preserves user habits and thus improves the overall PortaSwitch® customer
    experience.</p>
  <h4 class="Heading4"><a id="Implementation_specifics"></a>Implementation specifics</h4>
  <p>When operating with Dual Version PortaSwitch® via the API, consider the following implementation specifics:</p>
  <ol>
    <li>
      <p class="ListParagraph">Applications can operate with PortaSwitch® only via the REST and SOAP API. The WebSocket API is not supported.</p>
    </li>
    <li>
      <p class="ListParagraph">To establish a session with the target system, credentials for the API access must be the same for both systems.</p>
    </li>
    <li>
      <p class="ListParagraph">After login, the application will be provided with the session ID that must be used in all subsequent API requests.</p>
    </li>
    <li>
      <p class="ListParagraph">All communication between the application and PortaSwitch® is done via WebDispatcher.</p>
    </li>
    <li>
      <p class="ListParagraph">The common API entry point operates in conjunction with the dispatching SBC and Diameter proxy.</p>
    </li>
    <li>
      <p class="ListParagraph">Only the get_customer_list method provides results from both systems. If you have defined limits for the list (the number of rows to retrieve), expect results that are twice as long because the same limit value will be used when querying both the
        source and the target system.</p>
    </li>
  </ol>
  <ol class="List29" data-start="1" xmlns="">
  </ol>
  <h5><a id="Known_limitations"></a>Known limitations</h5>
  <p>Bear in mind the following known limitations:</p>
  <ol>
    <li>
      <p class="ListParagraph">For security measures, add the WebDispatcher IP address to the allowed IP addresses for each entity (user, customer, reseller) on the PortaBilling® web interface.</p>
    </li>
    <li>
      <p class="ListParagraph">The systems are mapped with each other by their environment IDs. Therefore, be careful when switching the environment since this may result in broken mapping and session disconnect with the target system.</p>
    </li>
    <li>
      <p class="ListParagraph">If the target system fails to establish the API session with the source system, it operates as if there is no source system.</p>
    </li>
  </ol>
  <ol class="List66" data-start="1" xmlns="">
  </ol>
  <h3 class="Heading3"><a id="Limitations_in_Dual_Version_PortaSwitch"></a>Limitations in Dual Version PortaSwitch®</h3>
  <p>The set of dispatchers in Dual Version PortaSwitch® distribute calls, registrations, API, number porting, CPE, RADIUS and Diameter requests thus ensuring customers in either system keep using the services as if nothing has happened.</p>
  <p>However, some services have limitations in scope of Dual Version PortaSwitch and require additional actions from the administrator. These services are:</p>
  <ol>
    <li>
      <p class="ListParagraph"><strong>Mail services</strong><strong>. </strong>If a user works with their mailbox via an external mail client, this client will not work properly after the user is migrated to the target system as it will keep sending the IMAP/SMTP requests to
        the source system’s address. The Mail proxy component operates only with local requests and does not support IMAP/SMTP request distribution across systems. Thus, it is required to reconfigure the mail clients to send IMAP/SMTP requests to the
        URL of the target system.</p>
    </li>
    <li>
      <p class="ListParagraph"><strong>SMSdelivery via SMPP.</strong>Like mail proxy, the SMPP proxy operates locally, i.e. it processes SMPP requests in the system it is configured in. The SMPP proxy does not support the SMPP request dispatching across systems in Dual Version
        PortaSwitch. Therefore, agree with your SMS providers to establish TCP connections with both source and target systems to handle SMPP traffic from them.</p>
    </li>
    <li>
      <p class="ListParagraph"><strong>Access to webmail and PortaSIP® API.</strong> Migrated customers can access their web mailboxes from their account self-care portal by clicking the Voicemail Inbox button. The direct access (i.e. by entering the web server’s URL in the browser)
        is not available until customers are provided with the IP address / domain name of the target system. Similarly, to access PortaSIP® API (e.g. to configure the auto-attendant), their API applications must be adjusted to send requests to the IP
        address / domain name of the target system. This is because these API requests are processed by a separate SOAP server which does not support request distribution.</p>
    </li>
    <li>
      <p class="ListParagraph"><strong>Callback services.</strong> Web and email callback services require reconfiguration to become available for migrated customers. Namely, provide customers with the email address and web page address to initiate email/web callback in the target
        system.</p>
    </li>
    <li>
      <p class="ListParagraph"><strong>Call control API. </strong>For customers to receive to real-time call state notifications, a WebSocket connection must be established and the API applications must subscribe to notifications via this connection. WebSocket API is not supported
        in Dual Version PortaSwitch®. Thus, though your customers can still use XML (SOAP) and REST (JSON) API for call control API methods, they will not receive call state notifications.</p>
    </li>
    <li>
      <p class="ListParagraph"><strong>IVR applications. </strong>IVR applications with access numbers defined as DIDs are available only if all customers using them reside in the same system. Thus, to preserve the service flow you must migrate all of them and the access number
        at once.</p>
    </li>
  </ol>
  <p><span id="cke_bm_21210E" style="display: none;"> </span></p>
  <ul class="List59" data-start="5" xmlns="">
  </ul>

</body></html>