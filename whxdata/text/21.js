rh._.exports({"0":["Concept_of_Dual_Version_PortaSwitch®"],"1":["\n  ","\n    ","\n    ","Dual Version PortaSwitch® is a solution for gradual migration to a newer software system version across several MRs using a two-system setup and customer batching. It allows service providers to gain access to the new features, secure their existing\n      platform's overall stability during an update, and carry out the update at a comfortable pace.","\n    ","Dual Version PortaSwitch® consists of two systems – source and target – that operate simultaneously.","\n    ","\n      ","\n        ","The"," source system"," runs the current release (e.g., MR65).","\n      ","\n      ","\n        ","The"," target system"," initially mirrors the source system and is then updated to a new release (i.e., MR65→MR80).","\n      ","\n    ","\n    ","To eliminate human errors and ensure stable and correct processes of service configuration and data transfer, Dual Version PortaSwitch® provides technical solutions that help migrate some of the existing customers to the new release. Customer migration\n      is done in batches. Immediately after the migration of a given customer batch, the services for it can be run with minimum reconfiguration efforts. ","\n    ","The available technical solutions in Dual Version PortaSwitch® address:","\n    ","\n      ","\n        ","Customer data transfer.","\n      ","\n      ","\n        ","Transparent routing of the calls to the system serving the customer.","\n      ","\n      ","\n        ","Proxying RADIUS/Diameter requests to the system serving the customer.","\n      ","\n      ","\n        ","Common API entry point.","\n      ","\n      ","\n        ","Distribution of number porting requests across systems based on the customer record location","\n      ","\n    ","\n    ","\n    ","The target system starts as a full database copy of the source (production) system (e.g., MR72). The database snapshot of the production system is copied to the target system, where it is upgraded to the new software version (e.g., MR85). As a result,\n      all configuration entities such as products, tariffs, and rates are cloned and ready-to-use on the target system.","\n    ","The dedicated provisioning scenario configures interconnection between both the source and target systems, installs all required code modifications, and enables all components required to run Dual Version PortaSwitch®, such as ESPF handlers, forwarding\n      registry, etc.","\n    ","Currently, the updates that \"jump\" over several release versions require obligatory checkpoints every 15 releases (currently MR55-6→MR70-6 or MR70-6→MR85-3).","\n  ","\n\n"],"2":["Concept of Dual Version PortaSwitch®"],"3":["About the target system setup"],"id":"21"})