rh._.exports({"0":["Centralized configuration management"],"1":["\n  ","\n    ","\n    ","In order to efficiently maintain large PortaSwitch® installations (which may involve 10 or more servers), it is essential to have a unified interface for managing all the configuration data. Tasks such as IP address changes, relocating services to\n      different physical servers, or simply changing an option that affects functionality can then be performed quickly and easily, with a minimal chance of error.","\n    ","Configuration server carries out exactly this task, providing an interface for the administrator to view the current configuration, create a new configuration and correctly apply it to all servers, or rollback to an old configuration if a problem\n      has been detected. Another important role of the Configuration server is that it stores “images” of different versions of the software. Each image is the actual content (in a binary format) of a specific version of the software code (e.g. Maintenance\n      Release 75, build 1). When a specific image is loaded, the server will operate under the corresponding software release.","\n    ","\n    ","There are several important concepts involved in the configuration management framework. Configuration management is designed to work in the same way whether it is controlling just a single PortaBilling® installation (four servers) or a PortaSwitch®\n      Clustered (nine servers). In the rest of this section, we will use some examples related to managing the full PortaSwitch® configuration (five servers), so as to better illustrate the capabilities of the configuration framework.","\n    ","\n    ","A server is an atomic element of processing capacity. It is either a single physical server, or a separate virtual machine, if virtualization is used. In other words, it is basically a host on which PortaSwitch® software can be installed and operated.\n      A server has attributes such as a number of available CPUs, disk space, and so on.","\n    ","\n    ","Several servers within the same PortaSwitch® installation make up a private cloud environment. They all run the same version of the software and, apart from differences in the available hardware resources (e.g. one server has a faster CPU), they are\n      completely interchangeable – i.e. a PortaSwitch® software component that can run on server A can also run on server B.","\n    ","\n    ","An instance is a copy of an application (e.g. OCS server) configured in a particular way and running on a server, i.e. it is a combination of the software code, configuration data, and running processes that provides an actual service. For example,\n      a PortaBilling® OCS instance with IP address 1.2.3.4 may be created on server ABC. Or three instances of PortaSIP® processing node may be created on server XYZ. They all have different IP addresses, and may differ in other configuration parameters,\n      e.g. one of them has the “start accounting” option turned on while the other two have it turned off.","\n    ","\n    ","An application server is a server with one or more running application instances of a certain type. For example, three instances of PortaSIP® processing nodes are running on server ABC and one instance of PortaSIP® processing node and one instance\n      of the billing engine are running on server XYZ. In this case you have two PortaSIP® application servers and one billing engine application server.","\n    ","\n    ","An option is a configuration parameter which alters the system’s functionality. Some examples of options would be “When should statistics generation be done,” or “Should the previous balance be included in the invoice’s amount due.” Depending on an\n      option, you can set its value by selecting it from a list, or by typing it into a text field.","\n    ","For convenience in administration, a default value is provided for most of the options, so that you do not have to supply a value for every single option in order to make the system work.","\n    ","\n    ","The full system configuration includes hundreds of different options, so it would certainly be inconvenient to work with them as a single list. Thus options are grouped together in a tree-like structure.","\n    ","\n    ","There are global options at the top level of the tree (","PortaSwitch"," (1)), i.e. those that have an effect on all of the components of the system.","\n    ","Beneath the global level is the application level (2). Each application is presented as a separate node in the configuration tree. These nodes can be grouped under bigger logical nodes, i.e. sip-cluster nodes are grouped under the ","PortaSIP Cluster","      node, which is itself is a subnode of ","ClusterSuite",".","\n    ","Thus, in order to change the ","allow_reauth"," option (which is related to the PortaBilling® application), you would go to the desired sip-cluster node of the PortaBilling® Cluster: ","PortaSwitch→Cluster Suite→PortaSIP Cluster→sip-cluster@193.168.1.17→MUB2bua",".","\n    ","Finally, there is the instance level (3), which covers options related to a specific instance.","\n    ","For example, in order to change the ","Time_Zone"," option for the porta-billing-web instance with IP address 193.28.87.21, you would go ","PortaSwitch→Admin→porta-billing-web-1@193.168.1.17",".","\n    ","\n    ","Some options may have different values in different virtual environments. These options are organized into environment sets, and each set provides control for options that are specific to a particular virtual environment. Virtual environments have\n      their own hierarchy; the ","Global"," set (4)"," ","is the highest level and individual virtual environments (5) represent the lower level.","\n    ","Since there are normally many individual options available at each level, for management’s convenience, the options are split into groups (6), and each group contains a small set of options that is related to a single software module or feature.","\n    ","When the value for an option is defined at a certain level, it is automatically propagated to all of the levels beneath it – if no value is directly specified for this option at a lower level.","\n    ","This means that the Configuration server chooses which value to use according to the following rule:","\n    ","\n      ","\n        ","If you specify an option value at a lower level, the Configuration server uses this value and ignores the data specified at a higher level;","\n      ","\n      ","\n        ","If you leave the option value at a lower level undefined,"," ","the Configuration server uses the ","default ","value – that is, the one specified at a higher level.","\n      ","\n    ","\n    ","Consider the following example.","\n    ","In the ","Configuration Tree"," panel you can go to the ","PortaSwitch→Admin"," node and in the ","Global"," set specify 14 as the default value for the ","DaysToExpireNotification ","option (you can find\n      this option in the ","Cards ","option group).","\n    ","\n    ","This value then becomes the default value for all of the virtual environments (those that exist and those not yet created), and PortaBilling® will send notifications to customers about their card expiration 14 days before the expiration date.","\n    ","However, if you need to notify customers in one of your billing environments (e.g. pb) 10 days before their cards expire, set the ","DaysToExpireNotification"," option value to 10, exclusively for this environment.","\n    ","\n    ","When a configuration is saved, this stores all the options in it – so every stored configuration contains a complete set of data for operating all PortaSwitch® components. In order to preserve system integrity it is not possible to directly alter\n      the active configuration (the one currently applied to the servers).","\n    ","In the case of changes not producing the desired result, it is always possible to roll the system back to its original, stable state.","\n    ","The process of changing the system configuration is thus divided into several steps:","\n    ","\n      ","\n        ","Clone the current configuration tree into a new one.","\n      ","\n      ","\n        ","Make the required changes.","\n      ","\n      ","\n        ","Now apply this configuration to the system so that it becomes the ","active"," one.","\n      ","\n    ","\n    ","\n    ","Every server in PortaSwitch® runs a configuration update agent, which follows commands from the Configuration server. When a configuration update is received, the agent updates the local files, restarts the processes and does everything else required\n      to put the changes into effect.","\n  ","\n\n"],"2":["Concepts"],"3":["Centralized configuration management"],"4":["Server","Private cloud","Instance","Application server","Option","Configuration tree","Multiple configurations","Applying the configuration"],"id":"7"})